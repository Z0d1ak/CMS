[{"G:\\GIT\\CMS\\frontEnd\\src\\index.tsx":"1","G:\\GIT\\CMS\\frontEnd\\src\\reportWebVitals.ts":"2","G:\\GIT\\CMS\\frontEnd\\src\\App.tsx":"3","G:\\GIT\\CMS\\frontEnd\\src\\loginAndRegister\\login\\login.tsx":"4","G:\\GIT\\CMS\\frontEnd\\src\\loginAndRegister\\register\\register.tsx":"5","G:\\GIT\\CMS\\frontEnd\\src\\base\\mainInterface\\mainPart\\mainPart.tsx":"6","G:\\GIT\\CMS\\frontEnd\\src\\base\\mainInterface\\leftMenu\\leftMenu.tsx":"7","G:\\GIT\\CMS\\frontEnd\\src\\base\\mainInterface\\avatarMenu\\avatarMenu.tsx":"8","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\infographics\\infographics.tsx":"9","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\employee\\employee.tsx":"10","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\task\\task.tsx":"11","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\article\\article.tsx":"12","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\filters\\filters.tsx":"13","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\employeeCard\\employeeCard.tsx":"14","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\articleCard\\articleCard.tsx":"15","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\dataRow\\dataRow.tsx":"16"},{"size":561,"mtime":1612273724000,"results":"17","hashOfConfig":"18"},{"size":440,"mtime":1612214528000,"results":"19","hashOfConfig":"18"},{"size":822,"mtime":1612475582000,"results":"20","hashOfConfig":"18"},{"size":2891,"mtime":1612475464000,"results":"21","hashOfConfig":"18"},{"size":3937,"mtime":1612475450000,"results":"22","hashOfConfig":"18"},{"size":2201,"mtime":1612284810000,"results":"23","hashOfConfig":"18"},{"size":2195,"mtime":1612474994000,"results":"24","hashOfConfig":"18"},{"size":1552,"mtime":1612284728000,"results":"25","hashOfConfig":"18"},{"size":284,"mtime":1612475088000,"results":"26","hashOfConfig":"18"},{"size":1065,"mtime":1612473924000,"results":"27","hashOfConfig":"18"},{"size":272,"mtime":1612475046000,"results":"28","hashOfConfig":"18"},{"size":1155,"mtime":1612475834000,"results":"29","hashOfConfig":"18"},{"size":514,"mtime":1612474546000,"results":"30","hashOfConfig":"18"},{"size":11468,"mtime":1612473918000,"results":"31","hashOfConfig":"18"},{"size":5998,"mtime":1612474700000,"results":"32","hashOfConfig":"18"},{"size":4417,"mtime":1612473908000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"10eil33",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"G:\\GIT\\CMS\\frontEnd\\src\\index.tsx",[],["77","78"],"G:\\GIT\\CMS\\frontEnd\\src\\reportWebVitals.ts",[],"G:\\GIT\\CMS\\frontEnd\\src\\App.tsx",["79","80","81"],"import React from 'react';\r\nimport './App.css';\r\nimport {Login} from \"./loginAndRegister/login/login\";\r\nimport {Register} from \"./loginAndRegister/register/register\";\r\nimport MainPart from \"./base/mainInterface/mainPart/mainPart\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\n\r\nimport {MenuFoldOutlined, MenuUnfoldOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport class App extends React.Component<{},{}> {\r\n\r\n    render() {\r\n        return(\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/home\">\r\n            <MainPart></MainPart>\r\n          </Route>\r\n        </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","G:\\GIT\\CMS\\frontEnd\\src\\loginAndRegister\\login\\login.tsx",[],"G:\\GIT\\CMS\\frontEnd\\src\\loginAndRegister\\register\\register.tsx",["82","83","84","85","86","87","88"],"import React from 'react';\r\nimport './register.css';\r\nimport 'antd/dist/antd.css';\r\nimport {Form, Input, Button, Checkbox, Col, Row} from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst onFinish = () => {\r\n    console.log('Success:', \"2\");\r\n};\r\n\r\nconst onFinishFailed = () => {\r\n    console.log('Failed:', \"1\");\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nexport class Register extends React.Component<{},{}> {\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n          return (<div className=\"LoginForm\">\r\n\r\n              <Row>\r\n                  <Col span={7}></Col>\r\n                  <Col span={8}>\r\n                      <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                          <Form.Item\r\n                              name={['user', 'name']}\r\n                              label=\"Имя\"\r\n                              rules={[\r\n                                  {\r\n                                      required: true,\r\n                                      message: 'Пожалуйста введите имя!',\r\n                                  },\r\n                              ]}\r\n                          >\r\n\r\n                              <Input />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                              name={['user', 'surname']}\r\n                              label=\"Фамилия\"\r\n                              rules={[\r\n                                  {\r\n                                      required: true,\r\n                                      message: 'Пожалуйста введите фамилию!',\r\n                                  },\r\n                              ]}\r\n                          >\r\n\r\n                              <Input />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                              name={['user', 'email']}\r\n                              label=\"Email\"\r\n                              rules={[\r\n                                  {\r\n                                      type: 'email',\r\n                                      required: true,\r\n                                      message: 'Пожалуйста введите email!',\r\n                                  },\r\n                              ]}\r\n                          >\r\n                              <Input />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                              name={['user', 'Company']}\r\n                              label=\"Название компании\"\r\n                              rules={[\r\n                                  {\r\n                                      required: true,\r\n                                      message: 'Пожалуйста введите название компании!',\r\n                                  },\r\n                              ]}\r\n                          >\r\n\r\n                              <Input />\r\n                          </Form.Item>\r\n\r\n\r\n                          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                              <Button type=\"primary\" htmlType=\"submit\">\r\n                                  Submit\r\n                              </Button>\r\n                          </Form.Item>\r\n                      </Form>\r\n              </Col>\r\n        <Col span={9}></Col>\r\n              </Row>\r\n              </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default Register;\r\n\r\n","G:\\GIT\\CMS\\frontEnd\\src\\base\\mainInterface\\mainPart\\mainPart.tsx",["89","90","91","92"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './mainPart.css';\r\nimport {Col, Layout, Menu, Row} from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n      Switch,\r\n  } from \"react-router-dom\";\r\n\r\nimport {LeftMenu,getLinksLeftMenu} from \"../leftMenu/leftMenu\"\r\nimport {getLinksAvatarMenu,AvatarMenu} from \"../avatarMenu/avatarMenu\"\r\nimport {BackTop} from \"antd\";\r\nconst { Header, Sider, Content } = Layout;\r\n\r\n\r\n\r\n\r\nexport class MainPart extends React.Component<{},{}> {\r\n    state = {\r\n        collapsed: false,\r\n        contentBox:<div></div>\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    getLinks() {\r\n\r\n        return ( \r\n            <Switch>\r\n            {getLinksAvatarMenu()}\r\n            {getLinksLeftMenu()}\r\n            </Switch>\r\n        );\r\n    };\r\n\r\n  \r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <LeftMenu collapsed={this.state.collapsed}/>\r\n                <Layout className=\"site-layout\">\r\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: this.toggle,\r\n                        })}\r\n                        <AvatarMenu/>\r\n                    </Header>\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            margin: '24px 16px',\r\n                            padding: 24,\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <Switch>\r\n                        {this.getLinks()}\r\n                        </Switch>\r\n                        <BackTop>\r\n                            <div className=\"BackUp\">Вверх</div>\r\n                        </BackTop>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPart;\r\n\r\n","G:\\GIT\\CMS\\frontEnd\\src\\base\\mainInterface\\leftMenu\\leftMenu.tsx",["93","94"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './leftMenu.css';\r\nimport {Layout, Menu} from 'antd';\r\nimport {\r\n    UsbOutlined,\r\n    SnippetsOutlined,\r\n    IdcardOutlined,\r\n    AreaChartOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\n\r\nimport Employees from \"../../contentOptions/employee/employee\"\r\nimport AllTexts from \"../../contentOptions/article/article\"\r\nimport Infographic from \"../../contentOptions/infographics/infographics\"\r\nimport InWork from \"../../contentOptions/task/task\"\r\n\r\n\r\nconst {  Sider } = Layout;\r\n\r\n\r\ninterface menuOpt {\r\n    text:string;\r\n    link:string;\r\n    icon:JSX.Element;\r\n    component:JSX.Element;\r\n}\r\n\r\nconst leftMenuContent: Array<menuOpt> = [ \r\n    {text:\"В работе\",link:\"/home/inwork\", icon:<UsbOutlined/>,component: <InWork/>},\r\n    {text:\"Все статьи\",link:\"/home/alltexts\", icon:<SnippetsOutlined />,component:< AllTexts/>},\r\n    {text:\"Сотрудник\",link:\"/home/emplo\", icon:<IdcardOutlined />,component:<Employees/>},\r\n    {text:\"Инфографика\",link:\"/home/info\", icon:<AreaChartOutlined />,component:<Infographic/>}\r\n];  \r\n\r\nexport function getLinksLeftMenu() {\r\n    return (\r\n        leftMenuContent.map((r, i) => {\r\n            return (\r\n                <Route path={r.link} >\r\n                    {r.component}\r\n                </Route>\r\n            )\r\n        })\r\n    );\r\n};\r\n\r\nfunction generateMenu() {\r\n    return (<Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n        {leftMenuContent.map((r, i) => {\r\n            return (\r\n                <Menu.Item key={i} icon={r.icon}>\r\n                    <Link to={r.link}>{r.text}</Link>\r\n                </Menu.Item>\r\n            )\r\n        })}\r\n    </Menu>);\r\n};\r\n\r\nexport class LeftMenu extends React.Component<{collapsed:boolean},{}> {\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n                <Sider trigger={null} collapsible collapsed={this.props.collapsed}>\r\n                    <div className=\"logo\" />\r\n                    {generateMenu()}\r\n                </Sider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {getLinksLeftMenu,LeftMenu}; \r\n\r\n","G:\\GIT\\CMS\\frontEnd\\src\\base\\mainInterface\\avatarMenu\\avatarMenu.tsx",["95","96","97"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './avatarMenu.css';\r\nimport {Layout, Menu} from 'antd';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Route\r\n  } from \"react-router-dom\";\r\n  import {Dropdown} from 'antd';\r\nimport {Avatar} from 'antd';\r\nimport {\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface menuOpt {\r\n    text:string;\r\n    link:string;\r\n}\r\n\r\nconst avatarMenuContent: Array<menuOpt> = [ \r\n    {text:\"Профиль\",link:\"/home/profile\"},\r\n    {text:\"Настройки\",link:\"/home/settings\"},\r\n    {text:\"Выход\",link:\"/login\"},\r\n];  \r\n\r\nexport function getLinksAvatarMenu() {\r\n    return (\r\n        avatarMenuContent.map((r, i) => {\r\n            return (\r\n                <Route path={r.link} >\r\n\r\n                </Route>\r\n            )\r\n        })\r\n    );\r\n};\r\n\r\nfunction generateMenu() {\r\n    return (\r\n        avatarMenuContent.map((r, i) => {\r\n            return (\r\n                <Menu.Item key={i}>\r\n                    <Link to={r.link}>{r.text}</Link>\r\n                </Menu.Item>\r\n            )\r\n        }\r\n    ));\r\n};\r\n\r\nexport class AvatarMenu extends React.Component<{},{}> {\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <Dropdown overlay={\r\n                <Menu>\r\n                   {generateMenu()}\r\n                </Menu>\r\n            } placement=\"bottomLeft\">\r\n                <Avatar className=\"userBox\" size={40} icon={<UserOutlined />}/>\r\n            </Dropdown>\r\n             );\r\n    }\r\n}\r\n\r\nexport default {getLinksAvatarMenu,AvatarMenu}; \r\n\r\n","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\infographics\\infographics.tsx",[],"G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\employee\\employee.tsx",["98","99"],"import React from 'react';\r\nimport './employee.css';\r\nimport 'antd/dist/antd.css';\r\nimport {EmployeeCard, GenerateCustomCardList} from \"../dataEntities/employeeCard/employeeCard\";\r\nimport {BackTop, Col, Pagination, Row} from \"antd\";\r\nimport SearchBox from \"../dataEntities/filters/filters\";\r\n\r\nexport class Employees extends React.Component<{},{}> {\r\n    generatePagination() {\r\n        return (\r\n            <Row>\r\n                <Col span={1}></Col>\r\n                <Col span={22}>\r\n                    <Pagination className=\"pagination\" defaultCurrent={1} total={50} />\r\n                </Col>\r\n                <Col span={1}></Col>\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return(<div>\r\n            <Row>\r\n                <Col span={1}></Col>\r\n                <Col span={22}>\r\n                    <SearchBox/>\r\n                </Col>\r\n                <Col span={1}></Col>\r\n            </Row>\r\n            <GenerateCustomCardList/>\r\n            {this.generatePagination()}\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Employees;\r\n\r\n","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\task\\task.tsx",[],"G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\article\\article.tsx",[],"G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\filters\\filters.tsx",["100","101","102","103","104","105"],"import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './filters.css';\r\n\r\nimport {Dropdown, Menu, message, Typography} from \"antd\";\r\n\r\n\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\nconst { Paragraph } = Typography;\r\n\r\n\r\n\r\nexport function SearchBox({}) {\r\n    return (\r\n        <Row>\r\n            <Col span={24}><Search placeholder=\"Искать\"/></Col>\r\n            <Col span={4}></Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBox;","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\employeeCard\\employeeCard.tsx",["106","107","108","109","110","111","112","113","114","115","116"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './employeeCard.css';\r\nimport {\r\n    SettingOutlined,\r\n    DeleteOutlined,\r\n    EllipsisOutlined,\r\n    UpOutlined,\r\n    CheckOutlined,\r\n\r\n} from '@ant-design/icons';\r\nimport { Typography,Divider } from 'antd';\r\nimport {Avatar,Dropdown,Card,Popconfirm, message,Menu } from 'antd';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport {DataRow,DataRowEditable,DataRowList,DataRowListEditable} from \"../dataRow/dataRow\";\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nclass User{\r\n    public firstname!: string;\r\n    public lastname!: string;\r\n    public email!: string;\r\n    public id!: string;\r\n    public foto!: string;\r\n    public roles!: string[];\r\n}\r\n\r\n\r\n\r\nexport class EmployeeCard extends React.Component<{testUser:User},{}> {\r\n\r\n    state = {\r\n        status:'narrow',\r\n        firstname:'',\r\n        lastname:'',\r\n        email:'',\r\n        id:'0',\r\n        roles:['']\r\n    };\r\n\r\n    constructor(props:{testUser:User}) {\r\n        super(props);\r\n        this.state.firstname = this.props.testUser.firstname;\r\n        this.state.lastname = this.props.testUser.lastname;\r\n        this.state.email = this.props.testUser.email;\r\n        this.state.roles = this.props.testUser.roles;\r\n        this.state.id = this.props.testUser.id;\r\n    };\r\n\r\n\r\n\r\n    expandCardChange = () => {\r\n        if(this.state.status=='narrow')\r\n            this.setState({ status: 'expand'});\r\n        else\r\n            this.setState({ status: 'narrow'});\r\n    };\r\n\r\n    makeEditableCardChange = () => {\r\n        if(this.state.status=='expand')\r\n            this.setState({ status: 'editable'});\r\n        else\r\n        {\r\n            //this.updateCard();\r\n            this.setState({ status: 'expand'});\r\n        }\r\n    };\r\n\r\n    deleteCard = () => {\r\n        message.info('Успешно удалено');\r\n\r\n    };\r\n\r\n    updateCard = (val:string) => {\r\n        message.info('Изменения сохранены');\r\n    };\r\n\r\n    updateDataFieldCallBack = (val:string,param:string) => {\r\n        this.setState({[param]:val});\r\n    };\r\n\r\n    updateListFieldCallBack = (val:string[],param:string) => {\r\n        this.setState({[param]:val});\r\n    };\r\n\r\n\r\n    DataRows= ():JSX.Element[] =>{\r\n        return (\r\n            [\r\n                <Divider />,\r\n                <DataRow dataStr={this.state.firstname} titleStr=\"Имя :\"/>,\r\n                <DataRow dataStr={this.state.lastname} titleStr=\"Фамилия :\"/>,\r\n                <DataRow dataStr={this.state.email} titleStr=\"Почта :\"/>,\r\n                <Divider />,\r\n                <DataRowList dataList={this.state.roles} titleStr=\"Роли :\"/>\r\n            ]\r\n        )\r\n    }\r\n\r\n    DataRowsEditable=():JSX.Element[]=>{\r\n        return (\r\n            [\r\n                <Divider />,\r\n                <DataRowEditable dataStr={this.state.firstname} titleStr=\"Имя :\" typeName=\"firstname\" editFieldCallback={this.updateDataFieldCallBack}/>,\r\n                <DataRowEditable dataStr={this.state.lastname} titleStr=\"Фамилия :\" typeName=\"lastname\" editFieldCallback={this.updateDataFieldCallBack}/>,\r\n                <DataRowEditable dataStr={this.state.email} titleStr=\"Почта :\" typeName=\"email\" editFieldCallback={this.updateDataFieldCallBack}/>,\r\n                <Divider />,\r\n                <DataRowListEditable dataList={this.state.roles} titleStr=\"Роли :\" typeName=\"roles\"  editListCallback={this.updateListFieldCallBack}/>\r\n            ]\r\n        )\r\n    }\r\n\r\n    optionsNarrow=():JSX.Element[]=>{\r\n        return (\r\n            [<EllipsisOutlined onClick={()=>this.expandCardChange()}/>]\r\n        )\r\n    }\r\n\r\n    optionsExpand=():JSX.Element[]=>{\r\n        return (\r\n            [<SettingOutlined onClick={()=>this.makeEditableCardChange()}/>,<UpOutlined onClick={()=>this.expandCardChange()}/>]\r\n        )\r\n    }\r\n\r\n    optionsExpandEditable=():JSX.Element[]=>{\r\n        return (\r\n            [<Popconfirm placement=\"topLeft\" title={\"Вы точно хотите удалить этот объект?\"} onConfirm={()=>this.deleteCard()} okText=\"Yes\" cancelText=\"No\"><DeleteOutlined/></Popconfirm>,<CheckOutlined onClick={()=>this.makeEditableCardChange()}/>]\r\n    )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"userCard wide\"\r\n                hoverable={true}\r\n                actions={\r\n                    this.state.status==\"narrow\"?this.optionsNarrow():this.state.status==\"expand\"?this.optionsExpand():this.optionsExpandEditable()\r\n                }\r\n            >\r\n                <Meta\r\n                    avatar={<Avatar size={50}  src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                    title={<div className=\"titleCard\">{this.state.firstname} {this.state.lastname}</div>}\r\n                    description={<div className=\"titleDescriptionCard\">{this.state.id}</div>}\r\n                />\r\n                {this.state.status==\"narrow\"?<div/>:this.state.status==\"expand\"?this.DataRows():this.DataRowsEditable()}\r\n            </Card>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function GenerateCustomCardList({},{}) {\r\n    let usersList:User[] =GetUserList();\r\n    return (\r\n        <Row>\r\n            <Col span={1}></Col>\r\n            <Col span={22}>\r\n            {usersList.map((u, i) => {\r\n                return (<EmployeeCard testUser={u}/>)\r\n            })}\r\n            </Col>\r\n            <Col span={1}></Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport function GetUserList(): User[] {\r\n    let userOne: User = new User();\r\n    userOne.email=\"bbelov@edu.hse.ru\"\r\n    userOne.firstname=\"Борис\"\r\n    userOne.lastname=\"Белов\"\r\n    userOne.id=\"1312313\";\r\n    userOne.roles=\r\n        [\r\n            \"Дизайнер\",\r\n            \"Студент\"\r\n        ];\r\n    userOne.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userTwo: User = new User();\r\n    userTwo.email=\"doFilonenko@mail.ru\"\r\n    userTwo.firstname=\"Иван\"\r\n    userTwo.lastname=\"Филоненко\"\r\n    userTwo.id=\"131345353\";\r\n    userTwo.roles=\r\n        [\r\n            \"Студент\"\r\n        ];\r\n    userTwo.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userThree: User = new User();\r\n    userThree.email=\"ggwp@gmail.com\"\r\n    userThree.firstname=\"Дмитрий\"\r\n    userThree.lastname=\"Дубина\"\r\n    userThree.id=\"131212341313\";\r\n    userThree.roles=\r\n        [\r\n            \"Разработчик\",\r\n            \"Верстальщик\",\r\n            \"Студент\"\r\n        ];\r\n    userThree.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userFour: User = new User();\r\n    userFour.email=\"13123123oofofo33@yandex.ru\"\r\n    userFour.firstname=\"Чечен\"\r\n    userFour.lastname=\"Арбузов\"\r\n    userFour.id=\"erg3434\";\r\n    userFour.roles=\r\n        [\r\n            \"Дизайнер\",\r\n            \"Разработчик\",\r\n            \"Верстальщик\",\r\n            \"Студент\",\r\n            \"бекэндер\",\r\n            \"Водитель\"\r\n        ];\r\n    userFour.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userFive: User = new User();\r\n    userFive.email=\"hh@gmail.com\"\r\n    userFive.firstname=\"Генадий\"\r\n    userFive.lastname=\"Глухов\"\r\n    userFive.id=\"0000234\";\r\n    userFive.roles=\r\n        [\r\n        ];\r\n    userFive.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n    let userOneq: User = new User();\r\n    userOneq.email=\"bbelov@edu.hse.ru\"\r\n    userOneq.firstname=\"Борис\"\r\n    userOneq.lastname=\"Белов\"\r\n    userOneq.id=\"1312313\";\r\n    userOneq.roles=\r\n        [\r\n            \"Дизайнер\",\r\n            \"Студент\"\r\n        ];\r\n    userOne.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userTwoq: User = new User();\r\n    userTwoq.email=\"doFilonenko@mail.ru\"\r\n    userTwoq.firstname=\"Иван\"\r\n    userTwoq.lastname=\"Филоненко\"\r\n    userTwoq.id=\"131345353\";\r\n    userTwoq.roles=\r\n        [\r\n            \"Студент\"\r\n        ];\r\n    userTwo.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userThreeq: User = new User();\r\n    userThreeq.email=\"ggwp@gmail.com\"\r\n    userThreeq.firstname=\"Дмитрий\"\r\n    userThreeq.lastname=\"Дубина\"\r\n    userThreeq.id=\"131212341313\";\r\n    userThreeq.roles=\r\n        [\r\n            \"Разработчик\",\r\n            \"Верстальщик\",\r\n            \"Студент\"\r\n        ];\r\n    userThree.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userFourq: User = new User();\r\n    userFourq.email=\"13123123oofofo33@yandex.ru\"\r\n    userFourq.firstname=\"Чечен\"\r\n    userFourq.lastname=\"Арбузов\"\r\n    userFourq.id=\"erg3434\";\r\n    userFourq.roles=\r\n        [\r\n            \"Дизайнер\",\r\n            \"Разработчик\",\r\n            \"Верстальщик\",\r\n            \"Студент\",\r\n            \"бекэндер\",\r\n            \"Водитель\"\r\n        ];\r\n    userFour.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    let userFiveq: User = new User();\r\n    userFiveq.email=\"hh@gmail.com\"\r\n    userFiveq.firstname=\"Генадий\"\r\n    userFiveq.lastname=\"Глухов\"\r\n    userFiveq.id=\"0000234\";\r\n    userFiveq.roles=\r\n        [\r\n        ];\r\n    userFiveq.foto = \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fproforientator.ru%2Fpublications%2Farticles%2Fprofessiya-programmist.html&psig=AOvVaw1XWvaroqESYDscMlBEuqzx&ust=1610547806934000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCJjAzqHMlu4CFQAAAAAdAAAAABAD\";\r\n\r\n    return [userOne,userTwo,userThree,userFour,userFive,userOneq,userTwoq,userThreeq,userFourq,userFiveq];\r\n}\r\n\r\nexport default GenerateCustomCardList;","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\articleCard\\articleCard.tsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './articleCard.css';\r\nimport {\r\n    SettingOutlined,\r\n    DeleteOutlined,\r\n    EllipsisOutlined,\r\n    UpOutlined,\r\n    CheckOutlined,\r\n\r\n} from '@ant-design/icons';\r\nimport { Typography,Divider } from 'antd';\r\nimport {Avatar,Dropdown,Card,Popconfirm, message,Menu } from 'antd';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport {DataRow,DataRowEditable,DataRowList,DataRowListEditable} from \"../dataRow/dataRow\";\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nclass Article{\r\n    public ID!: string;\r\n    public initiatorID!: string;\r\n    public companyID!: string;\r\n    public creationDate!: string;\r\n    public statusArt!: string;\r\n    public title!: string;\r\n    public contest!: string;\r\n}\r\n\r\n\r\n\r\nexport class CustomCard extends React.Component<{art:Article},{}> {\r\n\r\n    state = {\r\n        status:'narrow',\r\n        ID: '',\r\n        initiatorID: '',\r\n        companyID: '',\r\n        creationDate: '',\r\n        statusArt: '',\r\n        title: '',\r\n        contest:'',\r\n    };\r\n\r\n    constructor(props:{art:Article}) {\r\n        super(props);\r\n        this.state.ID = this.props.art.ID;\r\n        this.state.initiatorID = this.props.art.initiatorID;\r\n        this.state.companyID = this.props.art.companyID;\r\n        this.state.creationDate = this.props.art.creationDate;\r\n        this.state.statusArt= this.props.art.statusArt;\r\n        this.state.contest = this.props.art.contest;\r\n        this.state.title = this.props.art.title;\r\n    };\r\n\r\n\r\n\r\n    expandCardChange = () => {\r\n        if(this.state.status=='narrow')\r\n            this.setState({ status: 'expand'});\r\n        else\r\n            this.setState({ status: 'narrow'});\r\n    };\r\n\r\n    makeEditableCardChange = () => {\r\n        if(this.state.status=='expand')\r\n            this.setState({ status: 'editable'});\r\n        else\r\n        {\r\n            //this.updateCard();\r\n            this.setState({ status: 'expand'});\r\n        }\r\n    };\r\n\r\n    deleteCard = () => {\r\n        message.info('Успешно удалено');\r\n\r\n    };\r\n\r\n    updateCard = (val:string) => {\r\n        message.info('Изменения сохранены');\r\n    };\r\n\r\n    updateDataFieldCallBack = (val:string,param:string) => {\r\n        this.setState({[param]:val});\r\n    };\r\n\r\n    updateListFieldCallBack = (val:string[],param:string) => {\r\n        this.setState({[param]:val});\r\n    };\r\n\r\n\r\n    DataRows= ():JSX.Element[] =>{\r\n        return (\r\n            [\r\n                <Divider />,\r\n                <DataRow dataStr={this.state.statusArt} titleStr=\"Имя :\"/>,\r\n            ]\r\n        )\r\n    }\r\n\r\n    DataRowsEditable=():JSX.Element[]=>{\r\n        return (\r\n            [<div/>]\r\n        );\r\n    }\r\n\r\n    optionsNarrow=():JSX.Element[]=>{\r\n        return (\r\n            [<EllipsisOutlined onClick={()=>this.expandCardChange()}/>]\r\n        )\r\n    }\r\n\r\n    optionsExpand=():JSX.Element[]=>{\r\n        return (\r\n            [<SettingOutlined onClick={()=>this.makeEditableCardChange()}/>,<UpOutlined onClick={()=>this.expandCardChange()}/>]\r\n        )\r\n    }\r\n\r\n    optionsExpandEditable=():JSX.Element[]=>{\r\n        return (\r\n            [<Popconfirm placement=\"topLeft\" title={\"Вы точно хотите удалить этот объект?\"} onConfirm={()=>this.deleteCard()} okText=\"Yes\" cancelText=\"No\"><DeleteOutlined/></Popconfirm>,<CheckOutlined onClick={()=>this.makeEditableCardChange()}/>]\r\n    )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"userCard wide\"\r\n                hoverable={true}\r\n                actions={\r\n                    this.state.status==\"narrow\"?this.optionsNarrow():this.state.status==\"expand\"?this.optionsExpand():this.optionsExpandEditable()\r\n                }\r\n            >\r\n                <Meta\r\n                    title={<div className=\"titleCard\">{this.state.title}</div>}\r\n                    description={<div className=\"titleDescriptionCard\">{this.state.ID}</div>}\r\n                />\r\n                {this.state.status==\"narrow\"?<div/>:this.state.status==\"expand\"?this.DataRows():this.DataRowsEditable()}\r\n            </Card>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function GenerateCustomCardList({},{}) {\r\n    let usersList:Article[] =GetArticlesList();\r\n    return (\r\n        <Row>\r\n            <Col span={1}></Col>\r\n            <Col span={22}>\r\n            {usersList.map((u, i) => {\r\n                return (<CustomCard art={u}/>)\r\n            })}\r\n            </Col>\r\n            <Col span={1}></Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport function GetArticlesList(): Article[] {\r\n    let art: Article = new Article();\r\n    art.ID = '2134512341243';\r\n    art.initiatorID = '0000001-12342134-3432342-2134234';\r\n    art.companyID = '2342134234-234234234-234234-2341243';\r\n    art.creationDate = '28.11.2021';\r\n    art.statusArt= 'done';\r\n    art.contest = 'conten0t';\r\n    art.title = 'testArt 33333333333333333333333333rrrrrrr';\r\n\r\n    let art1: Article = new Article();\r\n    art.ID = '21345123434341243';\r\n    art.initiatorID = '0000001-12342133454-3432342-2134234';\r\n    art.companyID = '2342134234-23423434234-234234-2341243';\r\n    art.creationDate = '28.10.2121';\r\n    art.statusArt= 'done';\r\n    art.contest = 'conten1t';\r\n    art.title = '125335 rfc';\r\n\r\n\r\n    let art2: Article = new Article();\r\n    art.ID = '213451234221243';\r\n    art.initiatorID = '0000001-12342134-3432342-213423434';\r\n    art.companyID = '234213423664-234234234-234234-2341243';\r\n    art.creationDate = '23.10.2021';\r\n    art.statusArt= 'done';\r\n    art.contest = 'content2';\r\n    art.title = 'testArt rfcrf443214234   rfcrfcr  rfc';\r\n\r\n    let art3: Article = new Article();\r\n    art.ID = '2134512356641243';\r\n    art.initiatorID = '000340001-12342134-3432342-2134234';\r\n    art.companyID = '2342134234-2364234234-234234-2341243';\r\n    art.creationDate = '20.10.2021';\r\n    art.statusArt= 'done';\r\n    art.contest = 'content3';\r\n    art.title = 'testArt r444';\r\n\r\n    return  [art,art1,art2,art3]\r\n}\r\n\r\nexport default GenerateCustomCardList;","G:\\GIT\\CMS\\frontEnd\\src\\base\\contentOptions\\dataEntities\\dataRow\\dataRow.tsx",["132"],"import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './dataRow.css';\r\nimport {\r\n    CloseOutlined,\r\n    EditOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport {Dropdown, Menu, message, Typography} from \"antd\";\r\nconst { Paragraph } = Typography;\r\n\r\n\r\nexport interface IDataRowE {\r\n    dataStr: string\r\n    titleStr: string\r\n    typeName:string\r\n    editFieldCallback: (val:string,param:string) => void;\r\n}\r\n\r\nexport interface IDataRowListE {\r\n    dataList: string[]\r\n    titleStr: string\r\n    typeName:string\r\n    editListCallback: (val:string[],param:string) => void;\r\n}\r\n\r\nexport interface IDataRow {\r\n    dataStr: string\r\n    titleStr: string\r\n}\r\n\r\nexport interface IDataRowList {\r\n    dataList: string[]\r\n    titleStr: string\r\n}\r\n\r\nexport function DataRowEditable({dataStr, titleStr,typeName,editFieldCallback}: IDataRowE) {\r\n    const [editableStr, setEditableStr] = React.useState(dataStr);\r\n    return (\r\n        <Row className=\"DataRow\">\r\n            <Col span={4} >\r\n                <Paragraph className='DataRowTitle'>{titleStr}</Paragraph>\r\n            </Col>\r\n            <Col span={20}>\r\n                <Paragraph className='DataRowData'editable={{\r\n                maxLength: 40,\r\n                icon: <EditOutlined />,\r\n                tooltip: 'Изменить',\r\n                onChange:(editableStr)=>{setEditableStr(editableStr);editFieldCallback(editableStr,typeName);},\r\n            }}>\r\n                    {editableStr}\r\n                </Paragraph>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport function DataRow({dataStr, titleStr}: IDataRow) {\r\n    return (\r\n        <Row className=\"DataRow\">\r\n            <Col span={4}><Paragraph className='DataRowTitle'>{titleStr}</Paragraph></Col>\r\n            <Col span={4}><Paragraph className='DataRowData'>{dataStr}</Paragraph></Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport function DataRowList({dataList, titleStr}: IDataRowList) {\r\n    return (\r\n        <Row className=\"DataRow\">\r\n            <Col span={4}><Paragraph className='DataRowTitle'>{titleStr}</Paragraph></Col>\r\n            <Col span={6}><Paragraph className='DataRowList'>\r\n                <ul>\r\n                    {dataList.map((r, i) => {\r\n                        return (<li>{r}</li> )\r\n                    })}\r\n                </ul>\r\n            </Paragraph></Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport function DataRowListEditable({dataList, titleStr,typeName,editListCallback}: IDataRowListE) {\r\n    const [editableList, setEditableList] = React.useState(dataList);\r\n\r\n    function deleteUl(id:number,list:string[]):string[] {\r\n        let updateArray = [...list];\r\n        updateArray.splice(id, 1);\r\n        message.info(id);\r\n        editListCallback(updateArray,typeName);\r\n        return updateArray;\r\n    }\r\n\r\n    function addUl(el:string,list:string[]):string[] {\r\n        let updateArray = [...list];\r\n        updateArray.splice(list.length,0,el );\r\n        editListCallback(updateArray,typeName);\r\n        return updateArray;\r\n    }\r\n\r\n    function updateOptionsMenuCallBack():JSX.Element {\r\n        let optList:string[]=[\"Конструктор\",\"Дизайнер\",\"Корова\",\"Собака\"]\r\n        return <Menu>\r\n            {optList.map((r, i) => {\r\n                return (\r\n                    <Menu.Item onClick={()=>setEditableList(addUl(r,dataList))}>\r\n                        {r}\r\n                    </Menu.Item>\r\n                )\r\n            })}\r\n        </Menu>\r\n    }\r\n\r\n    return (\r\n        <Row className=\"DataRow\">\r\n            <Col span={4}><Paragraph className='DataRowTitle'>{titleStr}</Paragraph></Col>\r\n            <Col span={6}><Paragraph className='DataRowList'>\r\n                <ul>\r\n                    {editableList.map((r, i) => {\r\n                        return (\r\n                            <li>\r\n                                {r} <CloseOutlined className='DeleteIcon' onClick={()=>setEditableList(deleteUl(i,dataList))}/>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                    <div>\r\n                        <Dropdown overlay={updateOptionsMenuCallBack()}>\r\n                            <PlusOutlined className='AddIcon'/>\r\n                        </Dropdown>\r\n                    </div>\r\n                </ul>\r\n            </Paragraph></Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\nexport default DataRow;",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":7,"column":22,"nodeType":"139","messageId":"140","endLine":7,"endColumn":28},{"ruleId":"137","severity":1,"message":"141","line":13,"column":9,"nodeType":"139","messageId":"140","endLine":13,"endColumn":25},{"ruleId":"137","severity":1,"message":"142","line":13,"column":27,"nodeType":"139","messageId":"140","endLine":13,"endColumn":45},{"ruleId":"137","severity":1,"message":"143","line":4,"column":30,"nodeType":"139","messageId":"140","endLine":4,"endColumn":38},{"ruleId":"137","severity":1,"message":"144","line":14,"column":7,"nodeType":"139","messageId":"140","endLine":14,"endColumn":17},{"ruleId":"137","severity":1,"message":"145","line":25,"column":7,"nodeType":"139","messageId":"140","endLine":25,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":30,"column":15,"nodeType":"148","messageId":"149","endLine":30,"endColumn":38},{"ruleId":"146","severity":1,"message":"147","line":32,"column":16,"nodeType":"148","messageId":"149","endLine":32,"endColumn":48},{"ruleId":"146","severity":1,"message":"147","line":33,"column":17,"nodeType":"148","messageId":"149","endLine":33,"endColumn":50},{"ruleId":"146","severity":1,"message":"147","line":36,"column":16,"nodeType":"148","messageId":"149","endLine":36,"endColumn":60},{"ruleId":"137","severity":1,"message":"150","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":12},{"ruleId":"137","severity":1,"message":"151","line":4,"column":22,"nodeType":"139","messageId":"140","endLine":4,"endColumn":26},{"ruleId":"137","severity":1,"message":"152","line":4,"column":28,"nodeType":"139","messageId":"140","endLine":4,"endColumn":31},{"ruleId":"137","severity":1,"message":"153","line":17,"column":17,"nodeType":"139","messageId":"140","endLine":17,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":13,"column":22,"nodeType":"139","messageId":"140","endLine":13,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":81,"column":1,"nodeType":"156","endLine":81,"endColumn":44},{"ruleId":"137","severity":1,"message":"157","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":6,"column":22,"nodeType":"139","messageId":"140","endLine":6,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":68,"column":1,"nodeType":"156","endLine":68,"endColumn":48},{"ruleId":"137","severity":1,"message":"158","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":21},{"ruleId":"137","severity":1,"message":"159","line":5,"column":9,"nodeType":"139","messageId":"140","endLine":5,"endColumn":16},{"ruleId":"137","severity":1,"message":"160","line":2,"column":20,"nodeType":"139","messageId":"140","endLine":2,"endColumn":27},{"ruleId":"137","severity":1,"message":"161","line":6,"column":9,"nodeType":"139","messageId":"140","endLine":6,"endColumn":17},{"ruleId":"137","severity":1,"message":"151","line":6,"column":19,"nodeType":"139","messageId":"140","endLine":6,"endColumn":23},{"ruleId":"137","severity":1,"message":"162","line":6,"column":25,"nodeType":"139","messageId":"140","endLine":6,"endColumn":32},{"ruleId":"137","severity":1,"message":"163","line":11,"column":9,"nodeType":"139","messageId":"140","endLine":11,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":15,"column":27,"nodeType":"166","messageId":"167","endLine":15,"endColumn":29},{"ruleId":"137","severity":1,"message":"168","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":20},{"ruleId":"137","severity":1,"message":"161","line":13,"column":16,"nodeType":"139","messageId":"140","endLine":13,"endColumn":24},{"ruleId":"137","severity":1,"message":"151","line":13,"column":50,"nodeType":"139","messageId":"140","endLine":13,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":55,"column":29,"nodeType":"171","messageId":"167","endLine":55,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":62,"column":29,"nodeType":"171","messageId":"167","endLine":62,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":138,"column":38,"nodeType":"171","messageId":"167","endLine":138,"endColumn":40},{"ruleId":"169","severity":1,"message":"170","line":138,"column":87,"nodeType":"171","messageId":"167","endLine":138,"endColumn":89},{"ruleId":"169","severity":1,"message":"170","line":146,"column":35,"nodeType":"171","messageId":"167","endLine":146,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":146,"column":70,"nodeType":"171","messageId":"167","endLine":146,"endColumn":72},{"ruleId":"164","severity":1,"message":"165","line":158,"column":40,"nodeType":"166","messageId":"167","endLine":158,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":158,"column":43,"nodeType":"166","messageId":"167","endLine":158,"endColumn":45},{"ruleId":"137","severity":1,"message":"168","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":20},{"ruleId":"137","severity":1,"message":"172","line":13,"column":9,"nodeType":"139","messageId":"140","endLine":13,"endColumn":15},{"ruleId":"137","severity":1,"message":"161","line":13,"column":16,"nodeType":"139","messageId":"140","endLine":13,"endColumn":24},{"ruleId":"137","severity":1,"message":"151","line":13,"column":50,"nodeType":"139","messageId":"140","endLine":13,"endColumn":54},{"ruleId":"137","severity":1,"message":"173","line":16,"column":17,"nodeType":"139","messageId":"140","endLine":16,"endColumn":32},{"ruleId":"137","severity":1,"message":"174","line":16,"column":33,"nodeType":"139","messageId":"140","endLine":16,"endColumn":44},{"ruleId":"137","severity":1,"message":"175","line":16,"column":45,"nodeType":"139","messageId":"140","endLine":16,"endColumn":64},{"ruleId":"169","severity":1,"message":"170","line":62,"column":29,"nodeType":"171","messageId":"167","endLine":62,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":69,"column":29,"nodeType":"171","messageId":"167","endLine":69,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":134,"column":38,"nodeType":"171","messageId":"167","endLine":134,"endColumn":40},{"ruleId":"169","severity":1,"message":"170","line":134,"column":87,"nodeType":"171","messageId":"167","endLine":134,"endColumn":89},{"ruleId":"169","severity":1,"message":"170","line":141,"column":35,"nodeType":"171","messageId":"167","endLine":141,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":141,"column":70,"nodeType":"171","messageId":"167","endLine":141,"endColumn":72},{"ruleId":"164","severity":1,"message":"165","line":153,"column":40,"nodeType":"166","messageId":"167","endLine":153,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":153,"column":43,"nodeType":"166","messageId":"167","endLine":153,"endColumn":45},{"ruleId":"137","severity":1,"message":"160","line":2,"column":20,"nodeType":"139","messageId":"140","endLine":2,"endColumn":27},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'MenuFoldOutlined' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'Checkbox' is defined but never used.","'tailLayout' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Col' is defined but never used.","'Menu' is defined but never used.","'Row' is defined but never used.","'Sider' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Layout' is defined but never used.","'EmployeeCard' is defined but never used.","'BackTop' is defined but never used.","'Divider' is defined but never used.","'Dropdown' is defined but never used.","'message' is defined but never used.","'Paragraph' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Typography' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Avatar' is defined but never used.","'DataRowEditable' is defined but never used.","'DataRowList' is defined but never used.","'DataRowListEditable' is defined but never used.","no-global-assign","no-unsafe-negation"]